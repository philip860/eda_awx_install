
- name: Install nginx
  ansible.builtin.yum:
    name: nginx
    state: present 


- name: Set SELinux Context For Nginx
  ansible.builtin.shell:  setsebool -P httpd_can_network_connect 1
  args:
    executable: /bin/bash






- name: Permit traffic in default zone on port 5432/tcp For External Postgres Server
  ansible.posix.firewalld:
    port: 5432/tcp
    permanent: yes
    immediate: yes
    state: enabled



- name: Set variable for ITS tools directory
  stat:
    path: "/admin_tools"
  register:  admin_tools_dir_check

- name: Create the ITS_tools directory if it is not present
  ansible.builtin.file:
    path: "/admin_tools"
    state: directory
    mode: '0755'
    recurse: yes
  when: not admin_tools_dir_check.stat.exists == true



- name: Copy Over eda-awx-ssl.conf  to /etc/nginx/conf.d
  ansible.builtin.template:
    src: "{{ role_path }}/files/config_files/eda-awx-ssl.conf"
    dest: "/etc/nginx/conf.d/"


- name: Copy Over eda-awx-no-ssl.conf  to /etc/nginx/conf.d
  ansible.builtin.template:
    src: "{{ role_path }}/files/config_files/eda-awx-no-ssl.conf"
    dest: "/etc/nginx/conf.d/"   




- name: Create Namespace for EDA Operator Pt.1
  ansible.builtin.shell:  export NAMESPACE=eda
  args:
    executable: /bin/bash

- name: Create Namespace for EDA Operator Pt.2
  ansible.builtin.shell:  /usr/local/bin/kubectl  create ns eda
  args:
    executable: /bin/bash
  ignore_errors: true

- name: Create Namespace for EDA Operator Pt.3
  ansible.builtin.shell:  /usr/local/bin/kubectl  config set-context --current --namespace=eda
  args:
    executable: /bin/bash
  ignore_errors: true



# - name: Create Required Persistent Volume Directories
#   file:
#     path: "{{ item }}"
#     state: directory
#     owner: root
#     group: root
#     mode: 0775
#   loop:
#     - /var/lib/awx/postgres
#     - /var/lib/awx/projects

# - name: Set /data/projects Directory Permissions
#   ansible.builtin.shell: chown 1000:0 /var/lib/awx/projects
#   args:
#     executable: /bin/bash



- name: Need to Move Over TLS Cert From  /etc/letsencrypt directory
  ansible.builtin.shell:  "cp -r /etc/letsencrypt/archive/{{ ansible_nodename }}/cert1.pem /admin_tools/eda-operator/eda-deploy/tls.crt" 
  args:
    executable: /bin/bash

- name: Need to Move Over TLS Private Key From  /etc/letsencrypt directory
  ansible.builtin.shell:  "cp -r /etc/letsencrypt/archive/{{ ansible_nodename }}/privkey1.pem /admin_tools/eda-operator/eda-deploy/tls.key" 
  args:
    executable: /bin/bash


############## Certs Moved over from Self Signed Generation step, for nginx server
- name: Need to Move Over TLS Cert From  /etc/letsencrypt directory
  ansible.builtin.shell:  "cp -r /etc/letsencrypt/archive/{{ ansible_nodename }}/cert1.pem /etc/nginx/conf.d/server.crt" 
  args:
    executable: /bin/bash

- name: Need to Move Over TLS Private Key From  /etc/letsencrypt directory
  ansible.builtin.shell:  "cp -r /etc/letsencrypt/archive/{{ ansible_nodename }}/privkey1.pem /etc/nginx/conf.d/server.key" 
  args:
    executable: /bin/bash



- name: Entering a awx_admin_username Into secret File
  replace:
    path: "/admin_tools/awx-operator/awx-deploy/secret.yaml"
    regexp: 'iam_password'
    replace: "{{ awx_admin_username }}"


- name: Entering a secret_key Into secret File
  replace:
    path: "/admin_tools/awx-operator/awx-deploy/secret.yaml"
    regexp: 'super_secure_secretkey'
    replace: "{{ secret_key }}"


- name: Configure Firewall Ports For Kubernetes
  ansible.posix.firewalld:
    port: "{{ item }}/tcp"
    permanent: true
    state: enabled
    immediate: true
  loop:
    - 8443
    - 8080
    - 10250
    - 10248
    - 2379-2380
    - 10259
    - 10255
    - 6443
    - 51820
    - 5432

#For Pods
- name: Configure Firewall K3s Source Network-1
  ansible.posix.firewalld:
    source: 10.42.0.0/16
    zone: trusted
    state: enabled
    permanent: true
    immediate: true

#For services
- name: Configure Firewall K3s Source Network-2
  ansible.posix.firewalld:
    source: 10.43.0.0/16
    zone: trusted
    state: enabled
    permanent: true
    immediate: true


- name: Run kustomize to install eda operator 
  ansible.builtin.shell: /usr/local/bin/kustomize build . | kubectl apply -f -
  args:
    executable: /bin/bash
    chdir: /admin_tools/eda_awx_install_config
    
- name: Apply AWX Secrets
  ansible.builtin.shell: /usr/local/bin/kubectl apply -f secret.yaml
  args:
    executable: /bin/bash
    chdir: /admin_tools/awx-operator/awx-deploy    
     
    
- name: Enable masquerade for Public Zone for http service
  ansible.posix.firewalld:
    masquerade: yes
    state: enabled
    permanent: yes
    immediate: yes
    zone: public


- name: Waiting 30 Seconds For Pods To Initialize
  ansible.builtin.shell:  /bin/sleep 30
  args:
    executable: /bin/bash


    
    
- name: Waiting 10 Seconds For Pods To Initialize After Patch
  ansible.builtin.shell:  /bin/sleep 10
  args:
    executable: /bin/bash

- name: Create a AWX user
  user:
   name: awx
   password: "{{ awx_user_password_var | password_hash('sha512') }}"
   state: present
   shell: /bin/bash
   system: no
   createhome: yes
   home: /home/awx



- name: Export AWX NameSpace To AWX User Bash Profile
  become: true
  become_user: awx
  ansible.builtin.shell: echo 'export NAMESPACE=eda' >>  ~/.bashrc
  args:
    executable: /bin/bash
